A principal forma de comunicação de um sistema distribuído, é através da rede, possibilitando a troca de informações entre suas partes. Ao se desenvolver uma aplicação distribuída nos deparamos com alguns desafios que devem ser superados, para que tenhamos um resultado consistente e satisfatório, são eles :
\begin{itemize}
\item Heterogeneidade: diversos hosts devem se comunicar de maneira transparente, ou seja, várias instâncias da mesma aplicação devem ser capazes de se comunicar, independente da maneira como estão construídas.
\item Abertura: devem possuir um ambiente que permita várias formas de integração, ou seja, deve prover um ambiente que possa ser estendido ou reimplementado, e para isso pressupõe a necessidade de criação de interfaces públicas, garantindo assim o acesso as funcionalidades, e uma padronização para facilitar a integração entre os componentes.
\item Segurança: o ambiente deve fornecer segurança de acesso e proteção seletiva. Dentro dessa visão existem três aspectos fundamentais, a Confiabilidade que diz que somente o destinatário deve saber a mensagem enviada, a Integridade que diz que a mensagem deve chegar ao destinatário da mesma forma que foi enviada, ou seja não pode ter sido corrompida ou adulterada, e a Disponibilidade que diz que o serviço deve garantir o seu funcionamento mesmo diante de situações adversas.
\item Escalabilidade: o sistema deve possuir alta escalabilidade, ou seja, permitir que seja possível a ampliação do sistema de acordo com a necessidade. Para isso deve ser implementado um controle entre os componentes do sistema, visando sempre evitar um gargalo para a aplicação.
\item Manipulação de erros: erros do sistema devem ser tratados de maneira rápida e eficiente para minimizar os danos causados. Isso é possível através de um mecanismo de detecção de falha, utilizando de técnicas já conhecidas para realizar sua tarefa como por exemplo a utilização de arquivos de log ou a replicação dos servidores.
\item Transparência: o sistema deve se comportar como se fosse uma aplicação local, transmitindo uma melhor experiência para o usuário. Dentro dessa visão temos alguns aspectos relevantes que são a Transparência de acesso que esconde as diferenças entre representação de dados e mecanismos de invocação, a Transparência de Localização que permite o acesso aos recursos sem que se conheça a localização física, a Transparência de Replicação que permite o uso de múltiplas instâncias de um recurso com o intuito de aumentar a confiabilidade e desempenho, mas sem que o desenvolvedor e o usuário saibam, a Transparência de Falhas que permite a conclusão de uma tarefa mesmo na ocorrência de uma falha, e a Transparência de Migração que permite a movimentação de recursos sem que sua operabilidade seja afetada. 
\end{itemize}
